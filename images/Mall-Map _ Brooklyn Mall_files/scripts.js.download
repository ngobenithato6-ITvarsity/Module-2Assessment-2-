$(document).ready(function(){

    $('.button-search').click(function(){
        if ($(this).hasClass( "active" )){
            $('#search-area').slideUp( "slow");
            $(this).removeClass('active');
        }else{
            $('#search-area').slideDown( "slow");
            $(this).addClass('active');
        }

    });

    /**
     * Date Picker
     * */
    $('input[type="text"].datepicker').datepicker({ format : 'd M yyyy' , autoclose : 1 });

    /**
     * Used for styling select items in forms
     * Uncomment css include in containerstyles.css to make this work
     */
    $('select').chosen({ width : '100%', disable_search_threshold : 10, allow_single_deselect : 1 });

    /**
     * Style Checkboxes
     * */
    //$('input[type="checkbox"]').checkbox();

    /**
     * Reset custom styles inputs on form reset
     * */
    $('form').each(function () {
        var $form = $(this);
        var $buttons = $form.find('[data-toggle="buttons"] .btn input');
        var $dropdowns = $form.find('select');
        var $files = $form.find('.btn-file');
        $buttons.each(function () { $(this).data('initialState', $(this).prop('checked')); });
        $dropdowns.each(function () { $(this).data('initialState', $(this).val()); });
        $form.on('reset', function () {
            $buttons.each(function () { $(this).prop('checked', $(this).data('initialState')).parent().toggleClass('active', $(this).data('initialState')); });
            $dropdowns.each(function () {$(this).val($(this).data('initialState')).trigger('chosen:updated'); });
            $files.each(function () { $(this).find('.result-text').html('Browse...'); });
        });
    });

    /**
     * Custom Bootstrap file selector
     * */
    $('.btn-file input:file').on('fileselect', function(event, numFiles, label) {
        label = ( label != '' ) ? label : 'Browse...';
        var result = $(this).parent().find('.result-text');
        var log = numFiles > 1 ? numFiles + ' Files Selected' : label;
        if( result.length > 0 ) { result.html(log); } else { if( log ) { alert(log); } }
    });

    /**
     * Tooltip
     * */
    $('[data-toggle="tooltip"]').tooltip();

    /**
     * Number Fields
     * */
    $('input[type="number"]').on('keyup keydown change focus blur',function (e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            // Allow: Ctrl+A
            (e.keyCode == 65 && e.ctrlKey === true) ||
            // Allow: home, end, left, right
            (e.keyCode >= 35 && e.keyCode <= 39)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    });

});

/**
 * Custom Bootstrap File selector
 * */
$(document).on('change', '.btn-file input:file', function() {
    var input = $(this);
    var numFiles = input.get(0).files ? input.get(0).files.length : 1;
    var label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
    input.trigger('fileselect', [numFiles, label]);
});